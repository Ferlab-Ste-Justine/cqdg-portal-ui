groups:
  - name: portal-ui-cypress
    jobs:
      - run-cypress-tests  
  - name: update-pipeline
    jobs:
      - update-pipeline
resource_types:
- name: time
  type: registry-image
  source:
    repository: concourse/time-resource

- name: git
  type: registry-image
  source:
    repository: concourse/git-resource
    username: ((docker.username))
    password: ((docker.password))

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    username: ((docker.username))
    password: ((docker.password))
    tag: latest

resources:
# Cypress
- name: daily-schedule
  type: time
  check_every: 30s
  source:
    interval: 24h
    start: "02:00 AM"
    stop: "04:30 AM"
    location: "America/Toronto"
    days: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"]

- name: slack-alert-cypress
  type: slack-notification
  source:
    url: ((slack.webhook-url-cypress))

- name: ceph-storage
  type: s3
  source:
    endpoint: https://objets.juno.calculquebec.ca
    bucket: cqdg-qa-cypress-tests
    access_key_id: "((ceph.access_key))"
    secret_access_key: ((ceph.secret_key))
    use_ssl: false  # Set to true if ceph is configured with SSL
    regexp: test-results/merged-results-.*\.xml

- name: git-portal-ui
  type: git
  icon: github
  check_every: 5s
  webhook_token: ((slack.webhook-url))
  source:
    uri: git@github.com:Ferlab-Ste-Justine/cqdg-portal-ui.git
    branch: main
    private_key: ((git.ssh-key))
    # ignore_paths: [ci/]

- name: ci-folder
  type: git
  check_every: 30s
  source:
    uri: git@github.com:Ferlab-Ste-Justine/cqdg-portal-ui.git
    branch: main
    paths: [ci]
    private_key: ((git.ssh-key))

jobs:
- name: run-cypress-tests
  plan:
  - get: daily-schedule
    trigger: true
  - get: git-portal-ui
    trigger: false
    params:
      submodule_recursive: true
  - in_parallel:
      fail_fast: false
      steps:
      - task: cypress-parallel-1
        attempts: 6
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ferlabcrsj/cypress-included-custom
              tag: latest
          inputs:
            - name: git-portal-ui
          outputs:
            - name: test-results
            - name: timestamp
          params:
            CYPRESS_PASSWORD: ((cypress.password))
          run:
            path: bash
            args:
              - -c
              - |
                set +e 
                # Navigate to the project directory
                pushd git-portal-ui

                # Install dependencies
                npm install

                # Copy env-qa to .env
                cp env-qa .env
                
                # Ensure a newline before appending the variables
                echo "" >> .env
                echo 'CYPRESS_USER_PASSWORD="'$CYPRESS_PASSWORD'"' >> .env
                echo 'CYPRESS_USER_USERNAME="cypress"' >> .env

                # Run Cypress tests
                npx cypress run --config-file cypress.config.ts --config retries=5 --browser chrome --reporter junit --reporter-options "mochaFile=test-results/results-[hash].xml" --spec "cypress/e2e/**/*.cy.{js,jsx,ts,tsx}"
                
                # Run only the first Cypress test
                # FIRST_TEST=$(ls cypress/e2e/**/*.cy.{js,jsx,ts,tsx} | head -n 1)
                # npx cypress run --config-file cypress.config.ts --config retries=2 --browser chrome --reporter junit --reporter-options "mochaFile=test-results/results-[hash].xml" --spec "$FIRST_TEST"
             
                # Generate a timestamp
                TIMESTAMP=$(date +%Y%m%d%H%M%S)
                echo $TIMESTAMP > ../timestamp/timestamp.txt

                # Merge the XML files using junit-merge if results exist
                if compgen -G "test-results/results-*.xml" > /dev/null; then
                  npx junit-merge test-results/results-*.xml -o ../test-results/merged-results-${TIMESTAMP}.xml
                else
                  echo "No results to merge." > ../test-results/merged-results-${TIMESTAMP}.xml
                fi
                
                popd
                exit 0

  - put: ceph-storage
    params:
      file: test-results/merged-results-*.xml
    no_get: true

  - task: generate-presigned-url
    params:
      CEPH_ACCESS_KEY: ((ceph.access_key))
      CEPH_SECRET_KEY: ((ceph.secret_key))
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: ferlabcrsj/cypress-included-custom
          tag: latest
      inputs:
        - name: test-results
        - name: timestamp
      outputs:
        - name: slack-data
      run:
        path: bash
        args:
          - -c
          - |
            set -e  # Exit on error

            # Read the timestamp
            TIMESTAMP=$(cat timestamp/timestamp.txt)

            # Check if the merged results file is not empty
            if [ -s test-results/merged-results-${TIMESTAMP}.xml ]; then
              # Set AWS environment variables for credentials
              export AWS_ACCESS_KEY_ID=$CEPH_ACCESS_KEY
              export AWS_SECRET_ACCESS_KEY=$CEPH_SECRET_KEY

              # Generate a pre-signed URL
              PRESIGNED_URL=$(aws --endpoint-url https://objets.juno.calculquebec.ca s3 presign s3://cqdg-qa-cypress-tests/test-results/merged-results-${TIMESTAMP}.xml --expires-in 172800)

              # Prepare Slack message for success
              echo '[
                {
                  "color": "good",
                  "title": "Portal UI Cypress Test Results",
                  "text": "Cypress test results are available for Portal UI. <'$PRESIGNED_URL'|View Results>"
                }
              ]' > slack-data/attachments.json
            else
              # Prepare Slack message for absence of results
              echo '[
                {
                  "color": "warning",
                  "title": "Portal UI Cypress Test Results",
                  "text": "No test results are available for Portal UI due to an error or no tests were executed."
                }
              ]' > slack-data/attachments.json
            fi

  - put: slack-alert-cypress
    params:
      attachments_file: slack-data/attachments.json

- name: update-pipeline
  plan:
    - get: ci-folder
      trigger: true
    - set_pipeline: self
      file: ci-folder/ci/pipeline.yml