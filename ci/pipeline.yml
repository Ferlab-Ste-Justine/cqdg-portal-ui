groups:
  - name: ferlease
    jobs:
      - release-open-pr
      - teardown-closed-merged-pr

  - name: multi-feature-branch
    jobs:
      - set-feature-pipelines

resource_types:
- name: git
  type: registry-image
  source:
    repository: concourse/git-resource
    username: ((docker.username))
    password: ((docker.password))

- name: git-branches
  type: registry-image
  source:
    repository: aoldershaw/git-branches-resource
    username: ((docker.username))
    password: ((docker.password))
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
    username: ((docker.username))
    password: ((docker.password))
    
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    username: ((docker.username))
    password: ((docker.password))
    tag: latest

resources:
- name: slack-alert
  type: slack-notification
  source:
    url: ((slack.webhook-url))

- name: feature-branches
  type: git-branches
  check_every: 30s
  source:
    uri: git@github.com:Ferlab-Ste-Justine/clin-portal-ui.git
    private_key: ((git.ssh-key))
    # The "(?P<name>pattern)" syntax defines a named capture group.
    # aoldershaw/git-branches-resource emits the value of each named capture
    # group under the `groups` key.
    #
    # e.g. feature/some-feature ==> {"groups": {"feature": "some-feature"}}
    # branch_regex: 'feature/(?P<feature>.*)'
    branch_regex: '(feat|fix|refactor|perf)(?:\/)(?P<feature>[a-z]{2,8}-[0-9]+[a-z0-9\-]*)$'           

- name: git-portal-ui
  type: git
  icon: github
  check_every: 30s
  webhook_token: ((webhook-token))
  source:
    uri: git@github.com:Ferlab-Ste-Justine/clin-portal-ui.git
    branch: {{branch}}
    private_key: ((git.ssh-key))
    # ignore_paths: [ci/]

- name: open-pull-request
  type: pull-request
  check_every: 30s
  webhook_token: ((webhook-token))
  source:
    base_branch: main
    repository: Ferlab-Ste-Justine/clin-portal-ui
    access_token: ((git.access-token))
    states: ["OPEN"]
    # labels: ["bug"]

- name: closed-pull-request
  type: pull-request
  check_every: 30s
  webhook_token: ((webhook-token))
  source:
    base_branch: main
    repository: Ferlab-Ste-Justine/clin-portal-ui
    access_token: ((git.access-token))
    states: ["CLOSED", "MERGED"]

- name: ferlease
  type: docker-image
  icon: docker
  source:
    username: ((docker.username))
    password: ((docker.password))
    repository: ferlabcrsj/ferlease
    tag: 0.2.2

jobs:
- name: set-feature-pipelines
  plan:
  - in_parallel:
    - get: feature-branches
      trigger: true
    - get: git-portal-ui
      trigger: true
  - load_var: branches
    file: feature-branches/branches.json
  # Run a step multiple times with different combinations of variable values.
  - across:
    - var: branch
      values: ((.:branches))
    set_pipeline: portal-ui
    file: git-portal-ui/ci/template.yml
    instance_vars: {feature: ((.:branch.groups.feature))}
    vars: {branch: ((.:branch.name)), feature-name: ((.:branch.groups.feature))}

- name: release-open-pr
  on_success:
    put: slack-alert
    params:
      channel: '#clin-ferlease'
      attachments_file: output/attachments.json
  on_failure:
    put: slack-alert
    params:
      channel: '#clin-ferlease'
      attachments_file: output/attachments-fail.json
  plan:
  - get: open-pull-request
    trigger: true
    version: every
  - get: ferlease
  - task: generate-config-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/git-resource
      inputs:
      - name: open-pull-request
      outputs:
        - name: output
      run:
        path: bash
        # dir: pull-request
        args:
        - -c
        - |
          #!/bin/bash
          set -e
          set +x
          pushd open-pull-request
            branchName=$(cat .git/resource/head_name)
            releaseName=$(echo $branchName | cut -d "/" -f2)
            releaseTicket=$(cat release-ticket)
          popd
          cat > ./output/attachments.json <<EOL
          [
            {
              "title": "New Portal UI Release : Ticket: $releaseName:$releaseTicket",
              "text": " You can find the new release for portal UI at https://portal-ui-$releaseName.qa.cqgc.hsj.rtss.qc.ca",
              "color": "good"
            }
          ]
          EOL
          cat > ./output/attachments-fail.json <<EOL
          [
            {
              "title": "The branch $branchName may contain special characters or uppercase letters",
              "text": " The release failed to deploy, please check the branch name or conflicts",
              "color": "danger"
            }
          ]
          EOL
          if ! [[ "$branchName" =~ ^(feat|fix|refactor|perf)(\/)([a-z]{2,8}-[0-9]+[a-z0-9\-]*)$ ]]
          then
            echo "Le nom de branche contient des Caractères spéciaux ou des lettres majiscules !"
            exit 1
          fi
          cat > ./output/config.yml <<EOL
            service: portal-ui
            release: $releaseName
            environment: "qa"
            repo: "git@github.com:Ferlab-Ste-Justine/cqgc-pre-prod-kubernetes-environments.git"
            ref: main
            git_auth:
              ssh_key: "id_rsa"
              known_key: "known_host"
            author:
              name: ferlab-automation
              email: automation@ferlab.bio
            template_directory: "{{.RepoDir}}/ferlease-templates/{{.Service}}"
            commit_message: "{{ if eq .Operation \"release\" }}Adding{{ else }}Removing{{ end }} release {{.Release}} of service {{.Service}}"
            push_retries: 60
            push_retry_interval: "5s"
          EOL
  - task: ferlease
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/git-resource
      inputs:
      - name: output
      - name: ferlease
      outputs:
        - name: output
      params:
        SSH_KEY: ((git.ssh-key))
        KNOWN_HOST: ((git.known-host))
      run:
        path: bash
        # dir: pull-request
        args:
        - -c
        - |
          #!/bin/bash
          set -e
          set +x
          echo "$SSH_KEY" > id_rsa
          echo "$KNOWN_HOST" > known_host
          ./ferlease/rootfs/bin/ferlease release -c output/config.yml

- name: teardown-closed-merged-pr
  plan:
  - get: closed-pull-request
    trigger: true
    version: every
  - get: ferlease
  - task: generate-config-file
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/git-resource
      inputs:
      - name: closed-pull-request
      outputs:
        - name: output
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -e
          set +x
          pushd closed-pull-request
            branchName=$(cat .git/resource/head_name)
            releaseName=$(echo $branchName | cut -d "/" -f2)
          popd
          cat > ./output/config.yml <<EOL
            service: portal-ui
            release: $releaseName
            environment: "qa"
            repo: "git@github.com:Ferlab-Ste-Justine/cqgc-pre-prod-kubernetes-environments.git"
            ref: main
            git_auth:
              ssh_key: "id_rsa"
              known_key: "known_host"
            author:
              name: ferlab-automation
              email: automation@ferlab.bio
            template_directory: "{{.RepoDir}}/ferlease-templates/{{.Service}}"
            commit_message: "{{ if eq .Operation \"release\" }}Adding{{ else }}Removing{{ end }} release {{.Release}} of service {{.Service}}"
            push_retries: 60
            push_retry_interval: "5s"
          EOL
  - task: ferlease
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/git-resource
      inputs:
      - name: output
      - name: ferlease
      params:
        SSH_KEY: ((git.ssh-key))
        KNOWN_HOST: ((git.known-host))
      run:
        path: bash
        # dir: pull-request
        args:
        - -c
        - |
          #!/bin/bash
          set -e
          set +x
          echo "$SSH_KEY" > id_rsa
          echo "$KNOWN_HOST" > known_host
          ./ferlease/rootfs/bin/ferlease teardown -c output/config.yml
